package com.android.systemui.statusbar.phone;

import android.app.WallpaperManager;
import android.content.Context;
import android.hardware.devicestate.DeviceStateManager;
import android.os.Handler;
import android.os.PowerManager;
import android.service.dreams.IDreamManager;
import android.util.DisplayMetrics;
import com.android.internal.jank.InteractionJankMonitor;
import com.android.internal.logging.MetricsLogger;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.ViewMediatorCallback;
import com.android.p019wm.shell.bubbles.Bubbles;
import com.android.p019wm.shell.startingsurface.StartingSurface;
import com.android.systemui.InitController;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.animation.ActivityLaunchAnimator;
import com.android.systemui.assist.AssistManager;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.classifier.FalsingCollector;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.demomode.DemoModeController;
import com.android.systemui.dreams.DreamOverlayStateController;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.keyguard.KeyguardUnlockAnimationController;
import com.android.systemui.keyguard.KeyguardViewMediator;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.navigationbar.NavigationBarController;
import com.android.systemui.plugins.FalsingManager;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.recents.ScreenPinningRequest;
import com.android.systemui.settings.brightness.BrightnessSliderController;
import com.android.systemui.shared.plugins.PluginManager;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.KeyguardIndicationController;
import com.android.systemui.statusbar.LockscreenShadeTransitionController;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeDepthController;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.NotificationViewHierarchyManager;
import com.android.systemui.statusbar.PulseExpansionHandler;
import com.android.systemui.statusbar.SysuiStatusBarStateController;
import com.android.systemui.statusbar.charging.WiredChargingRippleController;
import com.android.systemui.statusbar.connectivity.NetworkController;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.NotifPipelineFlags;
import com.android.systemui.statusbar.notification.NotificationEntryManager;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import com.android.systemui.statusbar.notification.collection.legacy.VisualStabilityManager;
import com.android.systemui.statusbar.notification.collection.render.NotifShadeEventSource;
import com.android.systemui.statusbar.notification.init.NotificationsController;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptStateProvider;
import com.android.systemui.statusbar.notification.logging.NotificationLogger;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.phone.dagger.CentralSurfacesComponent;
import com.android.systemui.statusbar.phone.ongoingcall.OngoingCallController;
import com.android.systemui.statusbar.phone.panelstate.PanelExpansionStateManager;
import com.android.systemui.statusbar.policy.BatteryController;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.ExtensionController;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.UserInfoControllerImpl;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.window.StatusBarWindowController;
import com.android.systemui.statusbar.window.StatusBarWindowStateController;
import com.android.systemui.util.WallpaperController;
import com.android.systemui.util.concurrency.DelayableExecutor;
import com.android.systemui.util.concurrency.MessageRouter;
import com.android.systemui.volume.VolumeComponent;
import com.android.systemui.wmshell.BubblesManager;
import dagger.Lazy;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import java.util.Optional;
import java.util.concurrent.Executor;
import javax.inject.Provider;

public final class CentralSurfacesImpl_Factory implements Factory<CentralSurfacesImpl> {
    private final Provider<AccessibilityFloatingMenuController> accessibilityFloatingMenuControllerProvider;
    private final Provider<ActivityLaunchAnimator> activityLaunchAnimatorProvider;
    private final Provider<AssistManager> assistManagerLazyProvider;
    private final Provider<AutoHideController> autoHideControllerProvider;
    private final Provider<BatteryController> batteryControllerProvider;
    private final Provider<BiometricUnlockController> biometricUnlockControllerLazyProvider;
    private final Provider<BrightnessSliderController.Factory> brightnessSliderFactoryProvider;
    private final Provider<BroadcastDispatcher> broadcastDispatcherProvider;
    private final Provider<Optional<BubblesManager>> bubblesManagerOptionalProvider;
    private final Provider<Optional<Bubbles>> bubblesOptionalProvider;
    private final Provider<CentralSurfacesComponent.Factory> centralSurfacesComponentFactoryProvider;
    private final Provider<SysuiColorExtractor> colorExtractorProvider;
    private final Provider<CommandQueue> commandQueueProvider;
    private final Provider<ConfigurationController> configurationControllerProvider;
    private final Provider<Context> contextProvider;
    private final Provider<DelayableExecutor> delayableExecutorProvider;
    private final Provider<DemoModeController> demoModeControllerProvider;
    private final Provider<DeviceProvisionedController> deviceProvisionedControllerProvider;
    private final Provider<DeviceStateManager> deviceStateManagerProvider;
    private final Provider<DisplayMetrics> displayMetricsProvider;
    private final Provider<DozeParameters> dozeParametersProvider;
    private final Provider<DozeScrimController> dozeScrimControllerProvider;
    private final Provider<DozeServiceHost> dozeServiceHostProvider;
    private final Provider<IDreamManager> dreamManagerProvider;
    private final Provider<DreamOverlayStateController> dreamOverlayStateControllerProvider;
    private final Provider<DynamicPrivacyController> dynamicPrivacyControllerProvider;
    private final Provider<ExtensionController> extensionControllerProvider;
    private final Provider<FalsingCollector> falsingCollectorProvider;
    private final Provider<FalsingManager> falsingManagerProvider;
    private final Provider<FeatureFlags> featureFlagsProvider;
    private final Provider<FragmentService> fragmentServiceProvider;
    private final Provider<HeadsUpManagerPhone> headsUpManagerPhoneProvider;
    private final Provider<InitController> initControllerProvider;
    private final Provider<InteractionJankMonitor> jankMonitorProvider;
    private final Provider<KeyguardBypassController> keyguardBypassControllerProvider;
    private final Provider<KeyguardDismissUtil> keyguardDismissUtilProvider;
    private final Provider<KeyguardIndicationController> keyguardIndicationControllerProvider;
    private final Provider<KeyguardStateController> keyguardStateControllerProvider;
    private final Provider<KeyguardUnlockAnimationController> keyguardUnlockAnimationControllerProvider;
    private final Provider<KeyguardUpdateMonitor> keyguardUpdateMonitorProvider;
    private final Provider<KeyguardViewMediator> keyguardViewMediatorProvider;
    private final Provider<LightBarController> lightBarControllerProvider;
    private final Provider<NotificationLockscreenUserManager> lockScreenUserManagerProvider;
    private final Provider<LockscreenGestureLogger> lockscreenGestureLoggerProvider;
    private final Provider<LockscreenShadeTransitionController> lockscreenShadeTransitionControllerProvider;
    private final Provider<LockscreenWallpaper> lockscreenWallpaperLazyProvider;
    private final Provider<Handler> mainHandlerProvider;
    private final Provider<MessageRouter> messageRouterProvider;
    private final Provider<MetricsLogger> metricsLoggerProvider;
    private final Provider<NavigationBarController> navigationBarControllerProvider;
    private final Provider<NetworkController> networkControllerProvider;
    private final Provider<NotifPipelineFlags> notifPipelineFlagsProvider;
    private final Provider<NotifShadeEventSource> notifShadeEventSourceProvider;
    private final Provider<NotificationEntryManager> notificationEntryManagerProvider;
    private final Provider<NotificationGutsManager> notificationGutsManagerProvider;
    private final Provider<NotificationIconAreaController> notificationIconAreaControllerProvider;
    private final Provider<NotificationInterruptStateProvider> notificationInterruptStateProvider;
    private final Provider<NotificationLogger> notificationLoggerProvider;
    private final Provider<NotificationMediaManager> notificationMediaManagerProvider;
    private final Provider<NotificationShadeDepthController> notificationShadeDepthControllerLazyProvider;
    private final Provider<NotificationShadeWindowController> notificationShadeWindowControllerProvider;
    private final Provider<NotificationViewHierarchyManager> notificationViewHierarchyManagerProvider;
    private final Provider<NotificationWakeUpCoordinator> notificationWakeUpCoordinatorProvider;
    private final Provider<NotificationsController> notificationsControllerProvider;
    private final Provider<OngoingCallController> ongoingCallControllerProvider;
    private final Provider<PanelExpansionStateManager> panelExpansionStateManagerProvider;
    private final Provider<PhoneStatusBarPolicy> phoneStatusBarPolicyProvider;
    private final Provider<PluginDependencyProvider> pluginDependencyProvider;
    private final Provider<PluginManager> pluginManagerProvider;
    private final Provider<PowerManager> powerManagerProvider;
    private final Provider<PulseExpansionHandler> pulseExpansionHandlerProvider;
    private final Provider<NotificationRemoteInputManager> remoteInputManagerProvider;
    private final Provider<ScreenLifecycle> screenLifecycleProvider;
    private final Provider<ScreenOffAnimationController> screenOffAnimationControllerProvider;
    private final Provider<ScreenPinningRequest> screenPinningRequestProvider;
    private final Provider<ScrimController> scrimControllerProvider;
    private final Provider<ShadeController> shadeControllerProvider;
    private final Provider<Optional<StartingSurface>> startingSurfaceOptionalProvider;
    private final Provider<StatusBarHideIconsForBouncerManager> statusBarHideIconsForBouncerManagerProvider;
    private final Provider<StatusBarKeyguardViewManager> statusBarKeyguardViewManagerProvider;
    private final Provider<StatusBarSignalPolicy> statusBarSignalPolicyProvider;
    private final Provider<SysuiStatusBarStateController> statusBarStateControllerProvider;
    private final Provider<StatusBarTouchableRegionManager> statusBarTouchableRegionManagerProvider;
    private final Provider<StatusBarWindowController> statusBarWindowControllerProvider;
    private final Provider<StatusBarWindowStateController> statusBarWindowStateControllerProvider;
    private final Provider<Handler> timeTickHandlerProvider;
    private final Provider<Executor> uiBgExecutorProvider;
    private final Provider<UserInfoControllerImpl> userInfoControllerImplProvider;
    private final Provider<UserSwitcherController> userSwitcherControllerProvider;
    private final Provider<ViewMediatorCallback> viewMediatorCallbackProvider;
    private final Provider<VisualStabilityManager> visualStabilityManagerProvider;
    private final Provider<VolumeComponent> volumeComponentProvider;
    private final Provider<WakefulnessLifecycle> wakefulnessLifecycleProvider;
    private final Provider<WallpaperController> wallpaperControllerProvider;
    private final Provider<WallpaperManager> wallpaperManagerProvider;
    private final Provider<WiredChargingRippleController> wiredChargingRippleControllerProvider;

    public CentralSurfacesImpl_Factory(Provider<Context> provider, Provider<NotificationsController> provider2, Provider<FragmentService> provider3, Provider<LightBarController> provider4, Provider<AutoHideController> provider5, Provider<StatusBarWindowController> provider6, Provider<StatusBarWindowStateController> provider7, Provider<KeyguardUpdateMonitor> provider8, Provider<StatusBarSignalPolicy> provider9, Provider<PulseExpansionHandler> provider10, Provider<NotificationWakeUpCoordinator> provider11, Provider<KeyguardBypassController> provider12, Provider<KeyguardStateController> provider13, Provider<HeadsUpManagerPhone> provider14, Provider<DynamicPrivacyController> provider15, Provider<FalsingManager> provider16, Provider<FalsingCollector> provider17, Provider<BroadcastDispatcher> provider18, Provider<NotifShadeEventSource> provider19, Provider<NotificationEntryManager> provider20, Provider<NotificationGutsManager> provider21, Provider<NotificationLogger> provider22, Provider<NotificationInterruptStateProvider> provider23, Provider<NotificationViewHierarchyManager> provider24, Provider<PanelExpansionStateManager> provider25, Provider<KeyguardViewMediator> provider26, Provider<DisplayMetrics> provider27, Provider<MetricsLogger> provider28, Provider<Executor> provider29, Provider<NotificationMediaManager> provider30, Provider<NotificationLockscreenUserManager> provider31, Provider<NotificationRemoteInputManager> provider32, Provider<UserSwitcherController> provider33, Provider<NetworkController> provider34, Provider<BatteryController> provider35, Provider<SysuiColorExtractor> provider36, Provider<ScreenLifecycle> provider37, Provider<WakefulnessLifecycle> provider38, Provider<SysuiStatusBarStateController> provider39, Provider<Optional<BubblesManager>> provider40, Provider<Optional<Bubbles>> provider41, Provider<VisualStabilityManager> provider42, Provider<DeviceProvisionedController> provider43, Provider<NavigationBarController> provider44, Provider<AccessibilityFloatingMenuController> provider45, Provider<AssistManager> provider46, Provider<ConfigurationController> provider47, Provider<NotificationShadeWindowController> provider48, Provider<DozeParameters> provider49, Provider<ScrimController> provider50, Provider<LockscreenWallpaper> provider51, Provider<LockscreenGestureLogger> provider52, Provider<BiometricUnlockController> provider53, Provider<DozeServiceHost> provider54, Provider<PowerManager> provider55, Provider<ScreenPinningRequest> provider56, Provider<DozeScrimController> provider57, Provider<VolumeComponent> provider58, Provider<CommandQueue> provider59, Provider<CentralSurfacesComponent.Factory> provider60, Provider<PluginManager> provider61, Provider<ShadeController> provider62, Provider<StatusBarKeyguardViewManager> provider63, Provider<ViewMediatorCallback> provider64, Provider<InitController> provider65, Provider<Handler> provider66, Provider<PluginDependencyProvider> provider67, Provider<KeyguardDismissUtil> provider68, Provider<ExtensionController> provider69, Provider<UserInfoControllerImpl> provider70, Provider<PhoneStatusBarPolicy> provider71, Provider<KeyguardIndicationController> provider72, Provider<DemoModeController> provider73, Provider<NotificationShadeDepthController> provider74, Provider<StatusBarTouchableRegionManager> provider75, Provider<NotificationIconAreaController> provider76, Provider<BrightnessSliderController.Factory> provider77, Provider<ScreenOffAnimationController> provider78, Provider<WallpaperController> provider79, Provider<OngoingCallController> provider80, Provider<StatusBarHideIconsForBouncerManager> provider81, Provider<LockscreenShadeTransitionController> provider82, Provider<FeatureFlags> provider83, Provider<KeyguardUnlockAnimationController> provider84, Provider<Handler> provider85, Provider<DelayableExecutor> provider86, Provider<MessageRouter> provider87, Provider<WallpaperManager> provider88, Provider<Optional<StartingSurface>> provider89, Provider<ActivityLaunchAnimator> provider90, Provider<NotifPipelineFlags> provider91, Provider<InteractionJankMonitor> provider92, Provider<DeviceStateManager> provider93, Provider<DreamOverlayStateController> provider94, Provider<WiredChargingRippleController> provider95, Provider<IDreamManager> provider96) {
        this.contextProvider = provider;
        this.notificationsControllerProvider = provider2;
        this.fragmentServiceProvider = provider3;
        this.lightBarControllerProvider = provider4;
        this.autoHideControllerProvider = provider5;
        this.statusBarWindowControllerProvider = provider6;
        this.statusBarWindowStateControllerProvider = provider7;
        this.keyguardUpdateMonitorProvider = provider8;
        this.statusBarSignalPolicyProvider = provider9;
        this.pulseExpansionHandlerProvider = provider10;
        this.notificationWakeUpCoordinatorProvider = provider11;
        this.keyguardBypassControllerProvider = provider12;
        this.keyguardStateControllerProvider = provider13;
        this.headsUpManagerPhoneProvider = provider14;
        this.dynamicPrivacyControllerProvider = provider15;
        this.falsingManagerProvider = provider16;
        this.falsingCollectorProvider = provider17;
        this.broadcastDispatcherProvider = provider18;
        this.notifShadeEventSourceProvider = provider19;
        this.notificationEntryManagerProvider = provider20;
        this.notificationGutsManagerProvider = provider21;
        this.notificationLoggerProvider = provider22;
        this.notificationInterruptStateProvider = provider23;
        this.notificationViewHierarchyManagerProvider = provider24;
        this.panelExpansionStateManagerProvider = provider25;
        this.keyguardViewMediatorProvider = provider26;
        this.displayMetricsProvider = provider27;
        this.metricsLoggerProvider = provider28;
        this.uiBgExecutorProvider = provider29;
        this.notificationMediaManagerProvider = provider30;
        this.lockScreenUserManagerProvider = provider31;
        this.remoteInputManagerProvider = provider32;
        this.userSwitcherControllerProvider = provider33;
        this.networkControllerProvider = provider34;
        this.batteryControllerProvider = provider35;
        this.colorExtractorProvider = provider36;
        this.screenLifecycleProvider = provider37;
        this.wakefulnessLifecycleProvider = provider38;
        this.statusBarStateControllerProvider = provider39;
        this.bubblesManagerOptionalProvider = provider40;
        this.bubblesOptionalProvider = provider41;
        this.visualStabilityManagerProvider = provider42;
        this.deviceProvisionedControllerProvider = provider43;
        this.navigationBarControllerProvider = provider44;
        this.accessibilityFloatingMenuControllerProvider = provider45;
        this.assistManagerLazyProvider = provider46;
        this.configurationControllerProvider = provider47;
        this.notificationShadeWindowControllerProvider = provider48;
        this.dozeParametersProvider = provider49;
        this.scrimControllerProvider = provider50;
        this.lockscreenWallpaperLazyProvider = provider51;
        this.lockscreenGestureLoggerProvider = provider52;
        this.biometricUnlockControllerLazyProvider = provider53;
        this.dozeServiceHostProvider = provider54;
        this.powerManagerProvider = provider55;
        this.screenPinningRequestProvider = provider56;
        this.dozeScrimControllerProvider = provider57;
        this.volumeComponentProvider = provider58;
        this.commandQueueProvider = provider59;
        this.centralSurfacesComponentFactoryProvider = provider60;
        this.pluginManagerProvider = provider61;
        this.shadeControllerProvider = provider62;
        this.statusBarKeyguardViewManagerProvider = provider63;
        this.viewMediatorCallbackProvider = provider64;
        this.initControllerProvider = provider65;
        this.timeTickHandlerProvider = provider66;
        this.pluginDependencyProvider = provider67;
        this.keyguardDismissUtilProvider = provider68;
        this.extensionControllerProvider = provider69;
        this.userInfoControllerImplProvider = provider70;
        this.phoneStatusBarPolicyProvider = provider71;
        this.keyguardIndicationControllerProvider = provider72;
        this.demoModeControllerProvider = provider73;
        this.notificationShadeDepthControllerLazyProvider = provider74;
        this.statusBarTouchableRegionManagerProvider = provider75;
        this.notificationIconAreaControllerProvider = provider76;
        this.brightnessSliderFactoryProvider = provider77;
        this.screenOffAnimationControllerProvider = provider78;
        this.wallpaperControllerProvider = provider79;
        this.ongoingCallControllerProvider = provider80;
        this.statusBarHideIconsForBouncerManagerProvider = provider81;
        this.lockscreenShadeTransitionControllerProvider = provider82;
        this.featureFlagsProvider = provider83;
        this.keyguardUnlockAnimationControllerProvider = provider84;
        this.mainHandlerProvider = provider85;
        this.delayableExecutorProvider = provider86;
        this.messageRouterProvider = provider87;
        this.wallpaperManagerProvider = provider88;
        this.startingSurfaceOptionalProvider = provider89;
        this.activityLaunchAnimatorProvider = provider90;
        this.notifPipelineFlagsProvider = provider91;
        this.jankMonitorProvider = provider92;
        this.deviceStateManagerProvider = provider93;
        this.dreamOverlayStateControllerProvider = provider94;
        this.wiredChargingRippleControllerProvider = provider95;
        this.dreamManagerProvider = provider96;
    }

    public CentralSurfacesImpl get() {
        return newInstance(this.contextProvider.get(), this.notificationsControllerProvider.get(), this.fragmentServiceProvider.get(), this.lightBarControllerProvider.get(), this.autoHideControllerProvider.get(), this.statusBarWindowControllerProvider.get(), this.statusBarWindowStateControllerProvider.get(), this.keyguardUpdateMonitorProvider.get(), this.statusBarSignalPolicyProvider.get(), this.pulseExpansionHandlerProvider.get(), this.notificationWakeUpCoordinatorProvider.get(), this.keyguardBypassControllerProvider.get(), this.keyguardStateControllerProvider.get(), this.headsUpManagerPhoneProvider.get(), this.dynamicPrivacyControllerProvider.get(), this.falsingManagerProvider.get(), this.falsingCollectorProvider.get(), this.broadcastDispatcherProvider.get(), this.notifShadeEventSourceProvider.get(), this.notificationEntryManagerProvider.get(), this.notificationGutsManagerProvider.get(), this.notificationLoggerProvider.get(), this.notificationInterruptStateProvider.get(), this.notificationViewHierarchyManagerProvider.get(), this.panelExpansionStateManagerProvider.get(), this.keyguardViewMediatorProvider.get(), this.displayMetricsProvider.get(), this.metricsLoggerProvider.get(), this.uiBgExecutorProvider.get(), this.notificationMediaManagerProvider.get(), this.lockScreenUserManagerProvider.get(), this.remoteInputManagerProvider.get(), this.userSwitcherControllerProvider.get(), this.networkControllerProvider.get(), this.batteryControllerProvider.get(), this.colorExtractorProvider.get(), this.screenLifecycleProvider.get(), this.wakefulnessLifecycleProvider.get(), this.statusBarStateControllerProvider.get(), this.bubblesManagerOptionalProvider.get(), this.bubblesOptionalProvider.get(), this.visualStabilityManagerProvider.get(), this.deviceProvisionedControllerProvider.get(), this.navigationBarControllerProvider.get(), this.accessibilityFloatingMenuControllerProvider.get(), DoubleCheck.lazy(this.assistManagerLazyProvider), this.configurationControllerProvider.get(), this.notificationShadeWindowControllerProvider.get(), this.dozeParametersProvider.get(), this.scrimControllerProvider.get(), DoubleCheck.lazy(this.lockscreenWallpaperLazyProvider), this.lockscreenGestureLoggerProvider.get(), DoubleCheck.lazy(this.biometricUnlockControllerLazyProvider), this.dozeServiceHostProvider.get(), this.powerManagerProvider.get(), this.screenPinningRequestProvider.get(), this.dozeScrimControllerProvider.get(), this.volumeComponentProvider.get(), this.commandQueueProvider.get(), this.centralSurfacesComponentFactoryProvider.get(), this.pluginManagerProvider.get(), this.shadeControllerProvider.get(), this.statusBarKeyguardViewManagerProvider.get(), this.viewMediatorCallbackProvider.get(), this.initControllerProvider.get(), this.timeTickHandlerProvider.get(), this.pluginDependencyProvider.get(), this.keyguardDismissUtilProvider.get(), this.extensionControllerProvider.get(), this.userInfoControllerImplProvider.get(), this.phoneStatusBarPolicyProvider.get(), this.keyguardIndicationControllerProvider.get(), this.demoModeControllerProvider.get(), DoubleCheck.lazy(this.notificationShadeDepthControllerLazyProvider), this.statusBarTouchableRegionManagerProvider.get(), this.notificationIconAreaControllerProvider.get(), this.brightnessSliderFactoryProvider.get(), this.screenOffAnimationControllerProvider.get(), this.wallpaperControllerProvider.get(), this.ongoingCallControllerProvider.get(), this.statusBarHideIconsForBouncerManagerProvider.get(), this.lockscreenShadeTransitionControllerProvider.get(), this.featureFlagsProvider.get(), this.keyguardUnlockAnimationControllerProvider.get(), this.mainHandlerProvider.get(), this.delayableExecutorProvider.get(), this.messageRouterProvider.get(), this.wallpaperManagerProvider.get(), this.startingSurfaceOptionalProvider.get(), this.activityLaunchAnimatorProvider.get(), this.notifPipelineFlagsProvider.get(), this.jankMonitorProvider.get(), this.deviceStateManagerProvider.get(), this.dreamOverlayStateControllerProvider.get(), this.wiredChargingRippleControllerProvider.get(), this.dreamManagerProvider.get());
    }

    public static CentralSurfacesImpl_Factory create(Provider<Context> provider, Provider<NotificationsController> provider2, Provider<FragmentService> provider3, Provider<LightBarController> provider4, Provider<AutoHideController> provider5, Provider<StatusBarWindowController> provider6, Provider<StatusBarWindowStateController> provider7, Provider<KeyguardUpdateMonitor> provider8, Provider<StatusBarSignalPolicy> provider9, Provider<PulseExpansionHandler> provider10, Provider<NotificationWakeUpCoordinator> provider11, Provider<KeyguardBypassController> provider12, Provider<KeyguardStateController> provider13, Provider<HeadsUpManagerPhone> provider14, Provider<DynamicPrivacyController> provider15, Provider<FalsingManager> provider16, Provider<FalsingCollector> provider17, Provider<BroadcastDispatcher> provider18, Provider<NotifShadeEventSource> provider19, Provider<NotificationEntryManager> provider20, Provider<NotificationGutsManager> provider21, Provider<NotificationLogger> provider22, Provider<NotificationInterruptStateProvider> provider23, Provider<NotificationViewHierarchyManager> provider24, Provider<PanelExpansionStateManager> provider25, Provider<KeyguardViewMediator> provider26, Provider<DisplayMetrics> provider27, Provider<MetricsLogger> provider28, Provider<Executor> provider29, Provider<NotificationMediaManager> provider30, Provider<NotificationLockscreenUserManager> provider31, Provider<NotificationRemoteInputManager> provider32, Provider<UserSwitcherController> provider33, Provider<NetworkController> provider34, Provider<BatteryController> provider35, Provider<SysuiColorExtractor> provider36, Provider<ScreenLifecycle> provider37, Provider<WakefulnessLifecycle> provider38, Provider<SysuiStatusBarStateController> provider39, Provider<Optional<BubblesManager>> provider40, Provider<Optional<Bubbles>> provider41, Provider<VisualStabilityManager> provider42, Provider<DeviceProvisionedController> provider43, Provider<NavigationBarController> provider44, Provider<AccessibilityFloatingMenuController> provider45, Provider<AssistManager> provider46, Provider<ConfigurationController> provider47, Provider<NotificationShadeWindowController> provider48, Provider<DozeParameters> provider49, Provider<ScrimController> provider50, Provider<LockscreenWallpaper> provider51, Provider<LockscreenGestureLogger> provider52, Provider<BiometricUnlockController> provider53, Provider<DozeServiceHost> provider54, Provider<PowerManager> provider55, Provider<ScreenPinningRequest> provider56, Provider<DozeScrimController> provider57, Provider<VolumeComponent> provider58, Provider<CommandQueue> provider59, Provider<CentralSurfacesComponent.Factory> provider60, Provider<PluginManager> provider61, Provider<ShadeController> provider62, Provider<StatusBarKeyguardViewManager> provider63, Provider<ViewMediatorCallback> provider64, Provider<InitController> provider65, Provider<Handler> provider66, Provider<PluginDependencyProvider> provider67, Provider<KeyguardDismissUtil> provider68, Provider<ExtensionController> provider69, Provider<UserInfoControllerImpl> provider70, Provider<PhoneStatusBarPolicy> provider71, Provider<KeyguardIndicationController> provider72, Provider<DemoModeController> provider73, Provider<NotificationShadeDepthController> provider74, Provider<StatusBarTouchableRegionManager> provider75, Provider<NotificationIconAreaController> provider76, Provider<BrightnessSliderController.Factory> provider77, Provider<ScreenOffAnimationController> provider78, Provider<WallpaperController> provider79, Provider<OngoingCallController> provider80, Provider<StatusBarHideIconsForBouncerManager> provider81, Provider<LockscreenShadeTransitionController> provider82, Provider<FeatureFlags> provider83, Provider<KeyguardUnlockAnimationController> provider84, Provider<Handler> provider85, Provider<DelayableExecutor> provider86, Provider<MessageRouter> provider87, Provider<WallpaperManager> provider88, Provider<Optional<StartingSurface>> provider89, Provider<ActivityLaunchAnimator> provider90, Provider<NotifPipelineFlags> provider91, Provider<InteractionJankMonitor> provider92, Provider<DeviceStateManager> provider93, Provider<DreamOverlayStateController> provider94, Provider<WiredChargingRippleController> provider95, Provider<IDreamManager> provider96) {
        return new CentralSurfacesImpl_Factory(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37, provider38, provider39, provider40, provider41, provider42, provider43, provider44, provider45, provider46, provider47, provider48, provider49, provider50, provider51, provider52, provider53, provider54, provider55, provider56, provider57, provider58, provider59, provider60, provider61, provider62, provider63, provider64, provider65, provider66, provider67, provider68, provider69, provider70, provider71, provider72, provider73, provider74, provider75, provider76, provider77, provider78, provider79, provider80, provider81, provider82, provider83, provider84, provider85, provider86, provider87, provider88, provider89, provider90, provider91, provider92, provider93, provider94, provider95, provider96);
    }

    public static CentralSurfacesImpl newInstance(Context context, NotificationsController notificationsController, FragmentService fragmentService, LightBarController lightBarController, AutoHideController autoHideController, StatusBarWindowController statusBarWindowController, StatusBarWindowStateController statusBarWindowStateController, KeyguardUpdateMonitor keyguardUpdateMonitor, StatusBarSignalPolicy statusBarSignalPolicy, PulseExpansionHandler pulseExpansionHandler, NotificationWakeUpCoordinator notificationWakeUpCoordinator, KeyguardBypassController keyguardBypassController, KeyguardStateController keyguardStateController, HeadsUpManagerPhone headsUpManagerPhone, DynamicPrivacyController dynamicPrivacyController, FalsingManager falsingManager, FalsingCollector falsingCollector, BroadcastDispatcher broadcastDispatcher, NotifShadeEventSource notifShadeEventSource, NotificationEntryManager notificationEntryManager, NotificationGutsManager notificationGutsManager, NotificationLogger notificationLogger, NotificationInterruptStateProvider notificationInterruptStateProvider2, NotificationViewHierarchyManager notificationViewHierarchyManager, PanelExpansionStateManager panelExpansionStateManager, KeyguardViewMediator keyguardViewMediator, DisplayMetrics displayMetrics, MetricsLogger metricsLogger, Executor executor, NotificationMediaManager notificationMediaManager, NotificationLockscreenUserManager notificationLockscreenUserManager, NotificationRemoteInputManager notificationRemoteInputManager, UserSwitcherController userSwitcherController, NetworkController networkController, BatteryController batteryController, SysuiColorExtractor sysuiColorExtractor, ScreenLifecycle screenLifecycle, WakefulnessLifecycle wakefulnessLifecycle, SysuiStatusBarStateController sysuiStatusBarStateController, Optional<BubblesManager> optional, Optional<Bubbles> optional2, VisualStabilityManager visualStabilityManager, DeviceProvisionedController deviceProvisionedController, NavigationBarController navigationBarController, AccessibilityFloatingMenuController accessibilityFloatingMenuController, Lazy<AssistManager> lazy, ConfigurationController configurationController, NotificationShadeWindowController notificationShadeWindowController, DozeParameters dozeParameters, ScrimController scrimController, Lazy<LockscreenWallpaper> lazy2, LockscreenGestureLogger lockscreenGestureLogger, Lazy<BiometricUnlockController> lazy3, DozeServiceHost dozeServiceHost, PowerManager powerManager, ScreenPinningRequest screenPinningRequest, DozeScrimController dozeScrimController, VolumeComponent volumeComponent, CommandQueue commandQueue, CentralSurfacesComponent.Factory factory, PluginManager pluginManager, ShadeController shadeController, StatusBarKeyguardViewManager statusBarKeyguardViewManager, ViewMediatorCallback viewMediatorCallback, InitController initController, Handler handler, PluginDependencyProvider pluginDependencyProvider2, KeyguardDismissUtil keyguardDismissUtil, ExtensionController extensionController, UserInfoControllerImpl userInfoControllerImpl, PhoneStatusBarPolicy phoneStatusBarPolicy, KeyguardIndicationController keyguardIndicationController, DemoModeController demoModeController, Lazy<NotificationShadeDepthController> lazy4, StatusBarTouchableRegionManager statusBarTouchableRegionManager, NotificationIconAreaController notificationIconAreaController, BrightnessSliderController.Factory factory2, ScreenOffAnimationController screenOffAnimationController, WallpaperController wallpaperController, OngoingCallController ongoingCallController, StatusBarHideIconsForBouncerManager statusBarHideIconsForBouncerManager, LockscreenShadeTransitionController lockscreenShadeTransitionController, FeatureFlags featureFlags, KeyguardUnlockAnimationController keyguardUnlockAnimationController, Handler handler2, DelayableExecutor delayableExecutor, MessageRouter messageRouter, WallpaperManager wallpaperManager, Optional<StartingSurface> optional3, ActivityLaunchAnimator activityLaunchAnimator, NotifPipelineFlags notifPipelineFlags, InteractionJankMonitor interactionJankMonitor, DeviceStateManager deviceStateManager, DreamOverlayStateController dreamOverlayStateController, WiredChargingRippleController wiredChargingRippleController, IDreamManager iDreamManager) {
        return new CentralSurfacesImpl(context, notificationsController, fragmentService, lightBarController, autoHideController, statusBarWindowController, statusBarWindowStateController, keyguardUpdateMonitor, statusBarSignalPolicy, pulseExpansionHandler, notificationWakeUpCoordinator, keyguardBypassController, keyguardStateController, headsUpManagerPhone, dynamicPrivacyController, falsingManager, falsingCollector, broadcastDispatcher, notifShadeEventSource, notificationEntryManager, notificationGutsManager, notificationLogger, notificationInterruptStateProvider2, notificationViewHierarchyManager, panelExpansionStateManager, keyguardViewMediator, displayMetrics, metricsLogger, executor, notificationMediaManager, notificationLockscreenUserManager, notificationRemoteInputManager, userSwitcherController, networkController, batteryController, sysuiColorExtractor, screenLifecycle, wakefulnessLifecycle, sysuiStatusBarStateController, optional, optional2, visualStabilityManager, deviceProvisionedController, navigationBarController, accessibilityFloatingMenuController, lazy, configurationController, notificationShadeWindowController, dozeParameters, scrimController, lazy2, lockscreenGestureLogger, lazy3, dozeServiceHost, powerManager, screenPinningRequest, dozeScrimController, volumeComponent, commandQueue, factory, pluginManager, shadeController, statusBarKeyguardViewManager, viewMediatorCallback, initController, handler, pluginDependencyProvider2, keyguardDismissUtil, extensionController, userInfoControllerImpl, phoneStatusBarPolicy, keyguardIndicationController, demoModeController, lazy4, statusBarTouchableRegionManager, notificationIconAreaController, factory2, screenOffAnimationController, wallpaperController, ongoingCallController, statusBarHideIconsForBouncerManager, lockscreenShadeTransitionController, featureFlags, keyguardUnlockAnimationController, handler2, delayableExecutor, messageRouter, wallpaperManager, optional3, activityLaunchAnimator, notifPipelineFlags, interactionJankMonitor, deviceStateManager, dreamOverlayStateController, wiredChargingRippleController, iDreamManager);
    }
}
