package com.android.systemui.statusbar.phone;

import android.app.ActivityManager;
import android.content.ContentResolver;
import android.content.res.Resources;
import android.os.Handler;
import android.os.PowerManager;
import android.os.UserManager;
import android.view.LayoutInflater;
import android.view.accessibility.AccessibilityManager;
import com.android.internal.jank.InteractionJankMonitor;
import com.android.internal.logging.MetricsLogger;
import com.android.internal.util.LatencyTracker;
import com.android.keyguard.EmergencyButtonController;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.LockIconViewController;
import com.android.keyguard.dagger.KeyguardQsUserSwitchComponent;
import com.android.keyguard.dagger.KeyguardStatusBarViewComponent;
import com.android.keyguard.dagger.KeyguardStatusViewComponent;
import com.android.keyguard.dagger.KeyguardUserSwitcherComponent;
import com.android.p019wm.shell.animation.FlingAnimationUtils;
import com.android.systemui.biometrics.AuthController;
import com.android.systemui.classifier.FalsingCollector;
import com.android.systemui.controls.dagger.ControlsComponent;
import com.android.systemui.doze.DozeLog;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.keyguard.KeyguardUnlockAnimationController;
import com.android.systemui.media.KeyguardMediaController;
import com.android.systemui.media.MediaDataManager;
import com.android.systemui.media.MediaHierarchyManager;
import com.android.systemui.model.SysUiState;
import com.android.systemui.navigationbar.NavigationModeController;
import com.android.systemui.plugins.FalsingManager;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.qrcodescanner.controller.QRCodeScannerController;
import com.android.systemui.screenrecord.RecordingController;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.LockscreenShadeTransitionController;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeDepthController;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.PulseExpansionHandler;
import com.android.systemui.statusbar.QsFrameTranslateController;
import com.android.systemui.statusbar.VibratorHelper;
import com.android.systemui.statusbar.events.PrivacyDotViewController;
import com.android.systemui.statusbar.notification.ConversationNotificationManager;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.NotificationEntryManager;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import com.android.systemui.statusbar.notification.stack.AmbientState;
import com.android.systemui.statusbar.notification.stack.NotificationListContainer;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController;
import com.android.systemui.statusbar.notification.stack.NotificationStackSizeCalculator;
import com.android.systemui.statusbar.phone.NotificationPanelViewController;
import com.android.systemui.statusbar.phone.panelstate.PanelExpansionStateManager;
import com.android.systemui.statusbar.phone.shade.transition.ShadeTransitionController;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.window.StatusBarWindowStateController;
import com.android.systemui.unfold.SysUIUnfoldComponent;
import com.android.systemui.util.settings.SecureSettings;
import com.android.systemui.util.time.SystemClock;
import com.android.systemui.wallet.controller.QuickAccessWalletController;
import com.nothing.systemui.p024qs.NTQSStatusBarController;
import dagger.internal.Factory;
import java.util.Optional;
import java.util.concurrent.Executor;
import javax.inject.Provider;

public final class NotificationPanelViewController_Factory implements Factory<NotificationPanelViewController> {
    private final Provider<AccessibilityManager> accessibilityManagerProvider;
    private final Provider<ActivityManager> activityManagerProvider;
    private final Provider<AmbientState> ambientStateProvider;
    private final Provider<AuthController> authControllerProvider;
    private final Provider<KeyguardBypassController> bypassControllerProvider;
    private final Provider<CommandQueue> commandQueueProvider;
    private final Provider<ConfigurationController> configurationControllerProvider;
    private final Provider<ContentResolver> contentResolverProvider;
    private final Provider<ControlsComponent> controlsComponentProvider;
    private final Provider<ConversationNotificationManager> conversationNotificationManagerProvider;
    private final Provider<NotificationWakeUpCoordinator> coordinatorProvider;
    private final Provider<Integer> displayIdProvider;
    private final Provider<DozeLog> dozeLogProvider;
    private final Provider<DozeParameters> dozeParametersProvider;
    private final Provider<DynamicPrivacyController> dynamicPrivacyControllerProvider;
    private final Provider<EmergencyButtonController.Factory> emergencyButtonControllerFactoryProvider;
    private final Provider<FalsingCollector> falsingCollectorProvider;
    private final Provider<FalsingManager> falsingManagerProvider;
    private final Provider<FeatureFlags> featureFlagsProvider;
    private final Provider<FlingAnimationUtils.Builder> flingAnimationUtilsBuilderProvider;
    private final Provider<FragmentService> fragmentServiceProvider;
    private final Provider<Handler> handlerProvider;
    private final Provider<InteractionJankMonitor> interactionJankMonitorProvider;
    private final Provider<KeyguardMediaController> keyguardMediaControllerProvider;
    private final Provider<KeyguardQsUserSwitchComponent.Factory> keyguardQsUserSwitchComponentFactoryProvider;
    private final Provider<KeyguardStateController> keyguardStateControllerProvider;
    private final Provider<KeyguardStatusBarViewComponent.Factory> keyguardStatusBarViewComponentFactoryProvider;
    private final Provider<KeyguardStatusViewComponent.Factory> keyguardStatusViewComponentFactoryProvider;
    private final Provider<KeyguardUnlockAnimationController> keyguardUnlockAnimationControllerProvider;
    private final Provider<KeyguardUpdateMonitor> keyguardUpdateMonitorProvider;
    private final Provider<KeyguardUserSwitcherComponent.Factory> keyguardUserSwitcherComponentFactoryProvider;
    private final Provider<LargeScreenShadeHeaderController> largeScreenShadeHeaderControllerProvider;
    private final Provider<LatencyTracker> latencyTrackerProvider;
    private final Provider<LayoutInflater> layoutInflaterProvider;
    private final Provider<LockIconViewController> lockIconViewControllerProvider;
    private final Provider<LockscreenGestureLogger> lockscreenGestureLoggerProvider;
    private final Provider<LockscreenShadeTransitionController> lockscreenShadeTransitionControllerProvider;
    private final Provider<MediaDataManager> mediaDataManagerProvider;
    private final Provider<MediaHierarchyManager> mediaHierarchyManagerProvider;
    private final Provider<MetricsLogger> metricsLoggerProvider;
    private final Provider<NavigationModeController> navigationModeControllerProvider;
    private final Provider<NotificationEntryManager> notificationEntryManagerProvider;
    private final Provider<NotificationIconAreaController> notificationIconAreaControllerProvider;
    private final Provider<NotificationListContainer> notificationListContainerProvider;
    private final Provider<NotificationShadeDepthController> notificationShadeDepthControllerProvider;
    private final Provider<NotificationShadeWindowController> notificationShadeWindowControllerProvider;
    private final Provider<NotificationStackScrollLayoutController> notificationStackScrollLayoutControllerProvider;
    private final Provider<NotificationStackSizeCalculator> notificationStackSizeCalculatorProvider;
    private final Provider<NotificationsQSContainerController> notificationsQSContainerControllerProvider;
    private final Provider<NTQSStatusBarController> ntqsStatusBarControllerProvider;
    private final Provider<NotificationPanelViewController.PanelEventsEmitter> panelEventsEmitterProvider;
    private final Provider<PanelExpansionStateManager> panelExpansionStateManagerProvider;
    private final Provider<PowerManager> powerManagerProvider;
    private final Provider<PrivacyDotViewController> privacyDotViewControllerProvider;
    private final Provider<PulseExpansionHandler> pulseExpansionHandlerProvider;
    private final Provider<QRCodeScannerController> qrCodeScannerControllerProvider;
    private final Provider<QsFrameTranslateController> qsFrameTranslateControllerProvider;
    private final Provider<QuickAccessWalletController> quickAccessWalletControllerProvider;
    private final Provider<RecordingController> recordingControllerProvider;
    private final Provider<NotificationRemoteInputManager> remoteInputManagerProvider;
    private final Provider<Resources> resourcesProvider;
    private final Provider<ScreenOffAnimationController> screenOffAnimationControllerProvider;
    private final Provider<ScrimController> scrimControllerProvider;
    private final Provider<SecureSettings> secureSettingsProvider;
    private final Provider<ShadeTransitionController> shadeTransitionControllerProvider;
    private final Provider<StatusBarKeyguardViewManager> statusBarKeyguardViewManagerProvider;
    private final Provider<StatusBarStateController> statusBarStateControllerProvider;
    private final Provider<StatusBarTouchableRegionManager> statusBarTouchableRegionManagerProvider;
    private final Provider<StatusBarWindowStateController> statusBarWindowStateControllerProvider;
    private final Provider<SysUiState> sysUiStateProvider;
    private final Provider<SystemClock> systemClockProvider;
    private final Provider<TapAgainViewController> tapAgainViewControllerProvider;
    private final Provider<Executor> uiExecutorProvider;
    private final Provider<Optional<SysUIUnfoldComponent>> unfoldComponentProvider;
    private final Provider<UnlockedScreenOffAnimationController> unlockedScreenOffAnimationControllerProvider;
    private final Provider<UserManager> userManagerProvider;
    private final Provider<VibratorHelper> vibratorHelperProvider;
    private final Provider<NotificationPanelView> viewProvider;

    public NotificationPanelViewController_Factory(Provider<NotificationPanelView> provider, Provider<Resources> provider2, Provider<Handler> provider3, Provider<LayoutInflater> provider4, Provider<FeatureFlags> provider5, Provider<NotificationWakeUpCoordinator> provider6, Provider<PulseExpansionHandler> provider7, Provider<DynamicPrivacyController> provider8, Provider<KeyguardBypassController> provider9, Provider<FalsingManager> provider10, Provider<FalsingCollector> provider11, Provider<NotificationEntryManager> provider12, Provider<KeyguardStateController> provider13, Provider<StatusBarStateController> provider14, Provider<StatusBarWindowStateController> provider15, Provider<NotificationShadeWindowController> provider16, Provider<DozeLog> provider17, Provider<DozeParameters> provider18, Provider<CommandQueue> provider19, Provider<VibratorHelper> provider20, Provider<LatencyTracker> provider21, Provider<PowerManager> provider22, Provider<AccessibilityManager> provider23, Provider<Integer> provider24, Provider<KeyguardUpdateMonitor> provider25, Provider<MetricsLogger> provider26, Provider<ActivityManager> provider27, Provider<ConfigurationController> provider28, Provider<FlingAnimationUtils.Builder> provider29, Provider<StatusBarTouchableRegionManager> provider30, Provider<ConversationNotificationManager> provider31, Provider<MediaHierarchyManager> provider32, Provider<StatusBarKeyguardViewManager> provider33, Provider<NotificationsQSContainerController> provider34, Provider<NotificationStackScrollLayoutController> provider35, Provider<KeyguardStatusViewComponent.Factory> provider36, Provider<KeyguardQsUserSwitchComponent.Factory> provider37, Provider<KeyguardUserSwitcherComponent.Factory> provider38, Provider<KeyguardStatusBarViewComponent.Factory> provider39, Provider<LockscreenShadeTransitionController> provider40, Provider<NotificationIconAreaController> provider41, Provider<AuthController> provider42, Provider<ScrimController> provider43, Provider<UserManager> provider44, Provider<MediaDataManager> provider45, Provider<NotificationShadeDepthController> provider46, Provider<AmbientState> provider47, Provider<LockIconViewController> provider48, Provider<KeyguardMediaController> provider49, Provider<PrivacyDotViewController> provider50, Provider<TapAgainViewController> provider51, Provider<NavigationModeController> provider52, Provider<FragmentService> provider53, Provider<ContentResolver> provider54, Provider<QuickAccessWalletController> provider55, Provider<QRCodeScannerController> provider56, Provider<RecordingController> provider57, Provider<Executor> provider58, Provider<SecureSettings> provider59, Provider<LargeScreenShadeHeaderController> provider60, Provider<ScreenOffAnimationController> provider61, Provider<LockscreenGestureLogger> provider62, Provider<PanelExpansionStateManager> provider63, Provider<NotificationRemoteInputManager> provider64, Provider<Optional<SysUIUnfoldComponent>> provider65, Provider<ControlsComponent> provider66, Provider<InteractionJankMonitor> provider67, Provider<QsFrameTranslateController> provider68, Provider<SysUiState> provider69, Provider<KeyguardUnlockAnimationController> provider70, Provider<NotificationListContainer> provider71, Provider<NotificationPanelViewController.PanelEventsEmitter> provider72, Provider<NotificationStackSizeCalculator> provider73, Provider<UnlockedScreenOffAnimationController> provider74, Provider<ShadeTransitionController> provider75, Provider<SystemClock> provider76, Provider<NTQSStatusBarController> provider77, Provider<EmergencyButtonController.Factory> provider78) {
        this.viewProvider = provider;
        this.resourcesProvider = provider2;
        this.handlerProvider = provider3;
        this.layoutInflaterProvider = provider4;
        this.featureFlagsProvider = provider5;
        this.coordinatorProvider = provider6;
        this.pulseExpansionHandlerProvider = provider7;
        this.dynamicPrivacyControllerProvider = provider8;
        this.bypassControllerProvider = provider9;
        this.falsingManagerProvider = provider10;
        this.falsingCollectorProvider = provider11;
        this.notificationEntryManagerProvider = provider12;
        this.keyguardStateControllerProvider = provider13;
        this.statusBarStateControllerProvider = provider14;
        this.statusBarWindowStateControllerProvider = provider15;
        this.notificationShadeWindowControllerProvider = provider16;
        this.dozeLogProvider = provider17;
        this.dozeParametersProvider = provider18;
        this.commandQueueProvider = provider19;
        this.vibratorHelperProvider = provider20;
        this.latencyTrackerProvider = provider21;
        this.powerManagerProvider = provider22;
        this.accessibilityManagerProvider = provider23;
        this.displayIdProvider = provider24;
        this.keyguardUpdateMonitorProvider = provider25;
        this.metricsLoggerProvider = provider26;
        this.activityManagerProvider = provider27;
        this.configurationControllerProvider = provider28;
        this.flingAnimationUtilsBuilderProvider = provider29;
        this.statusBarTouchableRegionManagerProvider = provider30;
        this.conversationNotificationManagerProvider = provider31;
        this.mediaHierarchyManagerProvider = provider32;
        this.statusBarKeyguardViewManagerProvider = provider33;
        this.notificationsQSContainerControllerProvider = provider34;
        this.notificationStackScrollLayoutControllerProvider = provider35;
        this.keyguardStatusViewComponentFactoryProvider = provider36;
        this.keyguardQsUserSwitchComponentFactoryProvider = provider37;
        this.keyguardUserSwitcherComponentFactoryProvider = provider38;
        this.keyguardStatusBarViewComponentFactoryProvider = provider39;
        this.lockscreenShadeTransitionControllerProvider = provider40;
        this.notificationIconAreaControllerProvider = provider41;
        this.authControllerProvider = provider42;
        this.scrimControllerProvider = provider43;
        this.userManagerProvider = provider44;
        this.mediaDataManagerProvider = provider45;
        this.notificationShadeDepthControllerProvider = provider46;
        this.ambientStateProvider = provider47;
        this.lockIconViewControllerProvider = provider48;
        this.keyguardMediaControllerProvider = provider49;
        this.privacyDotViewControllerProvider = provider50;
        this.tapAgainViewControllerProvider = provider51;
        this.navigationModeControllerProvider = provider52;
        this.fragmentServiceProvider = provider53;
        this.contentResolverProvider = provider54;
        this.quickAccessWalletControllerProvider = provider55;
        this.qrCodeScannerControllerProvider = provider56;
        this.recordingControllerProvider = provider57;
        this.uiExecutorProvider = provider58;
        this.secureSettingsProvider = provider59;
        this.largeScreenShadeHeaderControllerProvider = provider60;
        this.screenOffAnimationControllerProvider = provider61;
        this.lockscreenGestureLoggerProvider = provider62;
        this.panelExpansionStateManagerProvider = provider63;
        this.remoteInputManagerProvider = provider64;
        this.unfoldComponentProvider = provider65;
        this.controlsComponentProvider = provider66;
        this.interactionJankMonitorProvider = provider67;
        this.qsFrameTranslateControllerProvider = provider68;
        this.sysUiStateProvider = provider69;
        this.keyguardUnlockAnimationControllerProvider = provider70;
        this.notificationListContainerProvider = provider71;
        this.panelEventsEmitterProvider = provider72;
        this.notificationStackSizeCalculatorProvider = provider73;
        this.unlockedScreenOffAnimationControllerProvider = provider74;
        this.shadeTransitionControllerProvider = provider75;
        this.systemClockProvider = provider76;
        this.ntqsStatusBarControllerProvider = provider77;
        this.emergencyButtonControllerFactoryProvider = provider78;
    }

    public NotificationPanelViewController get() {
        return newInstance(this.viewProvider.get(), this.resourcesProvider.get(), this.handlerProvider.get(), this.layoutInflaterProvider.get(), this.featureFlagsProvider.get(), this.coordinatorProvider.get(), this.pulseExpansionHandlerProvider.get(), this.dynamicPrivacyControllerProvider.get(), this.bypassControllerProvider.get(), this.falsingManagerProvider.get(), this.falsingCollectorProvider.get(), this.notificationEntryManagerProvider.get(), this.keyguardStateControllerProvider.get(), this.statusBarStateControllerProvider.get(), this.statusBarWindowStateControllerProvider.get(), this.notificationShadeWindowControllerProvider.get(), this.dozeLogProvider.get(), this.dozeParametersProvider.get(), this.commandQueueProvider.get(), this.vibratorHelperProvider.get(), this.latencyTrackerProvider.get(), this.powerManagerProvider.get(), this.accessibilityManagerProvider.get(), this.displayIdProvider.get().intValue(), this.keyguardUpdateMonitorProvider.get(), this.metricsLoggerProvider.get(), this.activityManagerProvider.get(), this.configurationControllerProvider.get(), this.flingAnimationUtilsBuilderProvider, this.statusBarTouchableRegionManagerProvider.get(), this.conversationNotificationManagerProvider.get(), this.mediaHierarchyManagerProvider.get(), this.statusBarKeyguardViewManagerProvider.get(), this.notificationsQSContainerControllerProvider.get(), this.notificationStackScrollLayoutControllerProvider.get(), this.keyguardStatusViewComponentFactoryProvider.get(), this.keyguardQsUserSwitchComponentFactoryProvider.get(), this.keyguardUserSwitcherComponentFactoryProvider.get(), this.keyguardStatusBarViewComponentFactoryProvider.get(), this.lockscreenShadeTransitionControllerProvider.get(), this.notificationIconAreaControllerProvider.get(), this.authControllerProvider.get(), this.scrimControllerProvider.get(), this.userManagerProvider.get(), this.mediaDataManagerProvider.get(), this.notificationShadeDepthControllerProvider.get(), this.ambientStateProvider.get(), this.lockIconViewControllerProvider.get(), this.keyguardMediaControllerProvider.get(), this.privacyDotViewControllerProvider.get(), this.tapAgainViewControllerProvider.get(), this.navigationModeControllerProvider.get(), this.fragmentServiceProvider.get(), this.contentResolverProvider.get(), this.quickAccessWalletControllerProvider.get(), this.qrCodeScannerControllerProvider.get(), this.recordingControllerProvider.get(), this.uiExecutorProvider.get(), this.secureSettingsProvider.get(), this.largeScreenShadeHeaderControllerProvider.get(), this.screenOffAnimationControllerProvider.get(), this.lockscreenGestureLoggerProvider.get(), this.panelExpansionStateManagerProvider.get(), this.remoteInputManagerProvider.get(), this.unfoldComponentProvider.get(), this.controlsComponentProvider.get(), this.interactionJankMonitorProvider.get(), this.qsFrameTranslateControllerProvider.get(), this.sysUiStateProvider.get(), this.keyguardUnlockAnimationControllerProvider.get(), this.notificationListContainerProvider.get(), this.panelEventsEmitterProvider.get(), this.notificationStackSizeCalculatorProvider.get(), this.unlockedScreenOffAnimationControllerProvider.get(), this.shadeTransitionControllerProvider.get(), this.systemClockProvider.get(), this.ntqsStatusBarControllerProvider.get(), this.emergencyButtonControllerFactoryProvider.get());
    }

    public static NotificationPanelViewController_Factory create(Provider<NotificationPanelView> provider, Provider<Resources> provider2, Provider<Handler> provider3, Provider<LayoutInflater> provider4, Provider<FeatureFlags> provider5, Provider<NotificationWakeUpCoordinator> provider6, Provider<PulseExpansionHandler> provider7, Provider<DynamicPrivacyController> provider8, Provider<KeyguardBypassController> provider9, Provider<FalsingManager> provider10, Provider<FalsingCollector> provider11, Provider<NotificationEntryManager> provider12, Provider<KeyguardStateController> provider13, Provider<StatusBarStateController> provider14, Provider<StatusBarWindowStateController> provider15, Provider<NotificationShadeWindowController> provider16, Provider<DozeLog> provider17, Provider<DozeParameters> provider18, Provider<CommandQueue> provider19, Provider<VibratorHelper> provider20, Provider<LatencyTracker> provider21, Provider<PowerManager> provider22, Provider<AccessibilityManager> provider23, Provider<Integer> provider24, Provider<KeyguardUpdateMonitor> provider25, Provider<MetricsLogger> provider26, Provider<ActivityManager> provider27, Provider<ConfigurationController> provider28, Provider<FlingAnimationUtils.Builder> provider29, Provider<StatusBarTouchableRegionManager> provider30, Provider<ConversationNotificationManager> provider31, Provider<MediaHierarchyManager> provider32, Provider<StatusBarKeyguardViewManager> provider33, Provider<NotificationsQSContainerController> provider34, Provider<NotificationStackScrollLayoutController> provider35, Provider<KeyguardStatusViewComponent.Factory> provider36, Provider<KeyguardQsUserSwitchComponent.Factory> provider37, Provider<KeyguardUserSwitcherComponent.Factory> provider38, Provider<KeyguardStatusBarViewComponent.Factory> provider39, Provider<LockscreenShadeTransitionController> provider40, Provider<NotificationIconAreaController> provider41, Provider<AuthController> provider42, Provider<ScrimController> provider43, Provider<UserManager> provider44, Provider<MediaDataManager> provider45, Provider<NotificationShadeDepthController> provider46, Provider<AmbientState> provider47, Provider<LockIconViewController> provider48, Provider<KeyguardMediaController> provider49, Provider<PrivacyDotViewController> provider50, Provider<TapAgainViewController> provider51, Provider<NavigationModeController> provider52, Provider<FragmentService> provider53, Provider<ContentResolver> provider54, Provider<QuickAccessWalletController> provider55, Provider<QRCodeScannerController> provider56, Provider<RecordingController> provider57, Provider<Executor> provider58, Provider<SecureSettings> provider59, Provider<LargeScreenShadeHeaderController> provider60, Provider<ScreenOffAnimationController> provider61, Provider<LockscreenGestureLogger> provider62, Provider<PanelExpansionStateManager> provider63, Provider<NotificationRemoteInputManager> provider64, Provider<Optional<SysUIUnfoldComponent>> provider65, Provider<ControlsComponent> provider66, Provider<InteractionJankMonitor> provider67, Provider<QsFrameTranslateController> provider68, Provider<SysUiState> provider69, Provider<KeyguardUnlockAnimationController> provider70, Provider<NotificationListContainer> provider71, Provider<NotificationPanelViewController.PanelEventsEmitter> provider72, Provider<NotificationStackSizeCalculator> provider73, Provider<UnlockedScreenOffAnimationController> provider74, Provider<ShadeTransitionController> provider75, Provider<SystemClock> provider76, Provider<NTQSStatusBarController> provider77, Provider<EmergencyButtonController.Factory> provider78) {
        return new NotificationPanelViewController_Factory(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37, provider38, provider39, provider40, provider41, provider42, provider43, provider44, provider45, provider46, provider47, provider48, provider49, provider50, provider51, provider52, provider53, provider54, provider55, provider56, provider57, provider58, provider59, provider60, provider61, provider62, provider63, provider64, provider65, provider66, provider67, provider68, provider69, provider70, provider71, provider72, provider73, provider74, provider75, provider76, provider77, provider78);
    }

    public static NotificationPanelViewController newInstance(NotificationPanelView notificationPanelView, Resources resources, Handler handler, LayoutInflater layoutInflater, FeatureFlags featureFlags, NotificationWakeUpCoordinator notificationWakeUpCoordinator, PulseExpansionHandler pulseExpansionHandler, DynamicPrivacyController dynamicPrivacyController, KeyguardBypassController keyguardBypassController, FalsingManager falsingManager, FalsingCollector falsingCollector, NotificationEntryManager notificationEntryManager, KeyguardStateController keyguardStateController, StatusBarStateController statusBarStateController, StatusBarWindowStateController statusBarWindowStateController, NotificationShadeWindowController notificationShadeWindowController, DozeLog dozeLog, DozeParameters dozeParameters, CommandQueue commandQueue, VibratorHelper vibratorHelper, LatencyTracker latencyTracker, PowerManager powerManager, AccessibilityManager accessibilityManager, int i, KeyguardUpdateMonitor keyguardUpdateMonitor, MetricsLogger metricsLogger, ActivityManager activityManager, ConfigurationController configurationController, Provider<FlingAnimationUtils.Builder> provider, StatusBarTouchableRegionManager statusBarTouchableRegionManager, ConversationNotificationManager conversationNotificationManager, MediaHierarchyManager mediaHierarchyManager, StatusBarKeyguardViewManager statusBarKeyguardViewManager, NotificationsQSContainerController notificationsQSContainerController, NotificationStackScrollLayoutController notificationStackScrollLayoutController, KeyguardStatusViewComponent.Factory factory, KeyguardQsUserSwitchComponent.Factory factory2, KeyguardUserSwitcherComponent.Factory factory3, KeyguardStatusBarViewComponent.Factory factory4, LockscreenShadeTransitionController lockscreenShadeTransitionController, NotificationIconAreaController notificationIconAreaController, AuthController authController, ScrimController scrimController, UserManager userManager, MediaDataManager mediaDataManager, NotificationShadeDepthController notificationShadeDepthController, AmbientState ambientState, LockIconViewController lockIconViewController, KeyguardMediaController keyguardMediaController, PrivacyDotViewController privacyDotViewController, TapAgainViewController tapAgainViewController, NavigationModeController navigationModeController, FragmentService fragmentService, ContentResolver contentResolver, QuickAccessWalletController quickAccessWalletController, QRCodeScannerController qRCodeScannerController, RecordingController recordingController, Executor executor, SecureSettings secureSettings, LargeScreenShadeHeaderController largeScreenShadeHeaderController, ScreenOffAnimationController screenOffAnimationController, LockscreenGestureLogger lockscreenGestureLogger, PanelExpansionStateManager panelExpansionStateManager, NotificationRemoteInputManager notificationRemoteInputManager, Optional<SysUIUnfoldComponent> optional, ControlsComponent controlsComponent, InteractionJankMonitor interactionJankMonitor, QsFrameTranslateController qsFrameTranslateController, SysUiState sysUiState, KeyguardUnlockAnimationController keyguardUnlockAnimationController, NotificationListContainer notificationListContainer, Object obj, NotificationStackSizeCalculator notificationStackSizeCalculator, UnlockedScreenOffAnimationController unlockedScreenOffAnimationController, ShadeTransitionController shadeTransitionController, SystemClock systemClock, NTQSStatusBarController nTQSStatusBarController, EmergencyButtonController.Factory factory5) {
        return new NotificationPanelViewController(notificationPanelView, resources, handler, layoutInflater, featureFlags, notificationWakeUpCoordinator, pulseExpansionHandler, dynamicPrivacyController, keyguardBypassController, falsingManager, falsingCollector, notificationEntryManager, keyguardStateController, statusBarStateController, statusBarWindowStateController, notificationShadeWindowController, dozeLog, dozeParameters, commandQueue, vibratorHelper, latencyTracker, powerManager, accessibilityManager, i, keyguardUpdateMonitor, metricsLogger, activityManager, configurationController, provider, statusBarTouchableRegionManager, conversationNotificationManager, mediaHierarchyManager, statusBarKeyguardViewManager, notificationsQSContainerController, notificationStackScrollLayoutController, factory, factory2, factory3, factory4, lockscreenShadeTransitionController, notificationIconAreaController, authController, scrimController, userManager, mediaDataManager, notificationShadeDepthController, ambientState, lockIconViewController, keyguardMediaController, privacyDotViewController, tapAgainViewController, navigationModeController, fragmentService, contentResolver, quickAccessWalletController, qRCodeScannerController, recordingController, executor, secureSettings, largeScreenShadeHeaderController, screenOffAnimationController, lockscreenGestureLogger, panelExpansionStateManager, notificationRemoteInputManager, optional, controlsComponent, interactionJankMonitor, qsFrameTranslateController, sysUiState, keyguardUnlockAnimationController, notificationListContainer, (NotificationPanelViewController.PanelEventsEmitter) obj, notificationStackSizeCalculator, unlockedScreenOffAnimationController, shadeTransitionController, systemClock, nTQSStatusBarController, factory5);
    }
}
